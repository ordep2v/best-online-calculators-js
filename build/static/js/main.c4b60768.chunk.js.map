{"version":3,"sources":["components/input-calculator/input-calculator.jsx","template/button.jsx","template/header.jsx","template/content.jsx","template/footer.jsx","components/roman-calculator/display.jsx","components/roman-calculator/calculator.jsx","utils/math-functions.js","pages/roman-calculators.jsx","components/bhaskara/bhaskara.jsx","pages/bhaskara-calculators.jsx","app.js","reportWebVitals.js","index.js"],"names":["InputCalculator","errorText","useState","resultNumber","setResultNumber","num1","num2","operation","values","setValues","convertToRoman","anyNumber","arabic","roman","arabicArray","romanArray","i","length","convertToArabic","numbers","toSum","sum","calculateAction","result","isNaN","eval","replace","toString","cleanDisplay","handleChange","e","target","name","value","handleSubmit","preventDefault","className","aria-label","toUpperCase","src","alt","onSubmit","id","htmlFor","type","onChange","disabled","required","defaultValue","number","onClick","Button","props","style","role","Header","href","Content","children","Footer","marginLeft","icon","faGithub","size","faLinkedin","Display","RomanCalculator","displayNumber","n1","n2","op","currentNumber","numConcat","parseInt","calculate","numberConcat","SUM","DECREASE","MULTIPLY","SHARE","setDisplayNumber","displayOp","setDisplayOp","setN1","setN2","setOp","numberAdd","opAdd","Number","isInteger","console","log","clean","fontSize","fontWeight","borderRadius","marginTop","width","height","background","borderColor","RomanCalculators","Bhaskara","x1","setX1","x2","setX2","delta","setDelta","displayEq","setDisplayEq","valueA","valueB","valueC","valuesEq","setValuesEq","deltaFind","Math","sqrt","findTwoX","BhaskaraCalculators","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4b60768.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../../template/button\";\nimport \"../../app.css\";\n\nconst InputCalculator = () => {\n  const errorText = \"*Insira valores válidos*\";\n  const [resultNumber, setResultNumber] = useState(\"0\");\n  const [values, setValues] = useState({\n    num1: \"\",\n    num2: \"\",\n    operation: \"\",\n  });\n\n  function convertToRoman(anyNumber) {\n    let arabic = anyNumber;\n    let roman = \"\";\n    const arabicArray = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    const romanArray = [\n      \"M\",\n      \"CM\",\n      \"D\",\n      \"CD\",\n      \"C\",\n      \"XC\",\n      \"L\",\n      \"XL\",\n      \"X\",\n      \"IX\",\n      \"V\",\n      \"IV\",\n      \"I\",\n    ];\n    if (arabic === \"0\") {\n      roman = \"NULO\";\n      return roman;\n    }\n    if (arabic !== 0) {\n      for (let i = 0; i < arabicArray.length; i++) {\n        while (arabicArray[i] <= arabic) {\n          roman += romanArray[i];\n          arabic -= arabicArray[i];\n        }\n      }\n      return roman;\n    }\n  }\n  function convertToArabic(anyNumber) {\n    var numbers = anyNumber;\n\n    if (anyNumber) {\n      switch (anyNumber) {\n        case \"m\":\n        case \"M\":\n          return 1000;\n        case \"cm\":\n        case \"CM\":\n          return 900;\n        case \"d\":\n        case \"D\":\n          return 500;\n        case \"cd\":\n        case \"CD\":\n          return 400;\n        case \"c\":\n        case \"C\":\n          return 100;\n        case \"xc\":\n        case \"XC\":\n          return 90;\n        case \"l\":\n        case \"L\":\n          return 50;\n        case \"xl\":\n        case \"XL\":\n          return 40;\n        case \"x\":\n        case \"X\":\n          return 10;\n        case \"ix\":\n        case \"IX\":\n          return 9;\n        case \"v\":\n        case \"V\":\n          return 5;\n        case \"iv\":\n        case \"IV\":\n          return 4;\n        case \"i\":\n        case \"I\":\n          return 1;\n        default:\n          return \"\";\n      }\n    }\n    return numbers;\n  }\n\n  function toSum(numbers) {\n    let sum = 0;\n    for (let i = 0; i < numbers.length; i++) {\n      sum = sum + convertToArabic(numbers[i]);\n    }\n    return sum;\n  }\n\n  function calculateAction() {\n    let result = \"\";\n\n    if (!isNaN(values.num1) && !isNaN(values.num2)) {\n      result = eval(`${values.num1} ${values.operation} ${values.num2}`);\n    } else {\n      result = eval(\n        `${toSum(\n          values.num1\n            .replace(9, \"\")\n            .replace(8, \"\")\n            .replace(7, \"\")\n            .replace(6, \"\")\n            .replace(5, \"\")\n            .replace(4, \"\")\n            .replace(3, \"\")\n            .replace(2, \"\")\n            .replace(1, \"\")\n            .replace(0, \"\")\n        )} ${values.operation.toString()} ${toSum(\n          values.num2\n            .replace(9, \"\")\n            .replace(8, \"\")\n            .replace(7, \"\")\n            .replace(6, \"\")\n            .replace(5, \"\")\n            .replace(4, \"\")\n            .replace(3, \"\")\n            .replace(2, \"\")\n            .replace(1, \"\")\n            .replace(0, \"\")\n        )}`\n      );\n    }\n\n    if (result >= 0) {\n      setResultNumber(\n        `${values.num1}\n        `\n      );\n    } else {\n      setResultNumber(errorText);\n    }\n  }\n\n  function cleanDisplay() {\n    setResultNumber(\"0\");\n  }\n\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!!isNaN(values.num1) && !!isNaN(values.num2)) {\n      calculateAction();\n    } else if (!isNaN(values.num1) && !isNaN(values.num2)) {\n      calculateAction();\n    } else if (!isNaN(values.num1) && !!isNaN(values.num2)) {\n      setResultNumber(errorText);\n    } else if (!!isNaN(values.num1) && !isNaN(values.num2)) {\n      setResultNumber(errorText);\n    } else {\n      setResultNumber(errorText);\n    }\n  };\n\n\n\n  return (\n    <div className=\"input-calculator\" aria-label=\"calculadora por input\">\n      <div className=\"input-display\">\n        <div className=\"input-result\">\n          {!resultNumber ||\n            (resultNumber === \"0\" && (\n              <>\n                <div>NULO</div>\n                <div>{resultNumber}</div>\n              </>\n            ))}\n          {resultNumber === errorText && (\n            <>\n              <div>{resultNumber}</div>\n              <div></div>\n            </>\n          )}\n          {resultNumber.length > 1 &&\n            resultNumber !== errorText &&\n            !!isNaN(values.num1) &&\n            !!isNaN(values.num2) && (\n              <>\n                <div className=\"input-content input\">\n                  <div>\n                    {values.num1\n                      .toUpperCase()\n                      .replace(9, \"\")\n                      .replace(8, \"\")\n                      .replace(7, \"\")\n                      .replace(6, \"\")\n                      .replace(5, \"\")\n                      .replace(4, \"\")\n                      .replace(3, \"\")\n                      .replace(2, \"\")\n                      .replace(1, \"\")\n                      .replace(0, \"\")}\n                    {values.operation}\n                    {values.num2\n                      .toUpperCase()\n                      .replace(9, \"\")\n                      .replace(8, \"\")\n                      .replace(7, \"\")\n                      .replace(6, \"\")\n                      .replace(5, \"\")\n                      .replace(4, \"\")\n                      .replace(3, \"\")\n                      .replace(2, \"\")\n                      .replace(1, \"\")\n                      .replace(0, \"\")}{\" \"}\n                    ={\" \"}\n                    {convertToRoman(\n                      eval(\n                        `${toSum(\n                          values.num1\n                            .toUpperCase()\n                            .replace(9, \"\")\n                            .replace(8, \"\")\n                            .replace(7, \"\")\n                            .replace(6, \"\")\n                            .replace(5, \"\")\n                            .replace(4, \"\")\n                            .replace(3, \"\")\n                            .replace(2, \"\")\n                            .replace(1, \"\")\n                            .replace(0, \"\")\n                        )} ${values.operation.toString()} ${toSum(\n                          values.num2\n                            .replace(9, \"\")\n                            .replace(8, \"\")\n                            .replace(7, \"\")\n                            .replace(6, \"\")\n                            .replace(5, \"\")\n                            .replace(4, \"\")\n                            .replace(3, \"\")\n                            .replace(2, \"\")\n                            .replace(1, \"\")\n                            .replace(0, \"\")\n                        )}`\n                      )\n                    )}\n                  </div>\n                  <div></div>\n                  <div className=\"input-content\">\n                    {eval(\n                      `${toSum(\n                        values.num1\n                          .replace(9, \"\")\n                          .replace(8, \"\")\n                          .replace(7, \"\")\n                          .replace(6, \"\")\n                          .replace(5, \"\")\n                          .replace(4, \"\")\n                          .replace(3, \"\")\n                          .replace(2, \"\")\n                          .replace(1, \"\")\n                          .replace(0, \"\")\n                      )} ${values.operation.toString()} ${toSum(\n                        values.num2\n                          .replace(9, \"\")\n                          .replace(8, \"\")\n                          .replace(7, \"\")\n                          .replace(6, \"\")\n                          .replace(5, \"\")\n                          .replace(4, \"\")\n                          .replace(3, \"\")\n                          .replace(2, \"\")\n                          .replace(1, \"\")\n                          .replace(0, \"\")\n                      )}`\n                    )}\n                  </div>\n                </div>\n              </>\n            )}\n          {resultNumber.length > 1 &&\n            resultNumber !== \"*Insira valores válidos*\" &&\n            !isNaN(values.num1) &&\n            !isNaN(values.num2) && (\n              <>\n                <div className=\"input-content\">\n                  <div>\n                    {values.num1}\n                    {values.operation}\n                    {values.num2} ={\" \"}\n                    {eval(`${values.num1} ${values.operation} ${values.num2}`)}\n                  </div>\n                  <div className=\"input-content\">\n                    {convertToRoman(\n                      eval(\n                        `${values.num1} ${values.operation.toString()} ${\n                          values.num2\n                        }`\n                      )\n                    )}\n                  </div>\n                </div>\n              </>\n            )}\n        </div>\n        <div className=\"logo-input\">\n          <img src=\"./inputcalculator.png\" alt=\"logo calculadora input\"></img>\n        </div>\n      </div>\n      <div className=\"form\">\n        <form\n          onSubmit={handleSubmit}\n          id=\"form-calculator\"\n          aria-label=\"formulario\"\n        >\n          <div>\n            <label htmlFor=\"num1\">Insira um número</label>\n            {resultNumber !== \"0\" && (\n              <input\n                id=\"input-calculator-preferences\"\n                type=\"number\"\n                name=\"num1\"\n                onChange={handleChange}\n                disabled\n                required\n              />\n            )}\n\n            {resultNumber === \"0\" && (\n              <input\n                id=\"input-calculator-preferences\"\n                type=\"text\"\n                name=\"num1\"\n                onChange={handleChange}\n                required\n              />\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"\">Insira a operação</label>\n            {resultNumber !== \"0\" && (\n              <select\n                name=\"operation\"\n                required\n                onChange={(e) => handleChange(e)}\n                disabled\n              >\n                <option defaultValue value=\"\">\n                  Selecione\n                </option>\n                <option value=\"+\">SOMAR</option>\n                <option value=\"-\">SUBTRAIR</option>\n                <option value=\"*\">MULTIPLICAR</option>\n                <option value=\"/\">DIVIDIR</option>\n              </select>\n            )}\n\n            {resultNumber === \"0\" && (\n              <select\n                name=\"operation\"\n                required\n                onChange={(e) => handleChange(e)}\n              >\n                <option defaultValue value=\"\">\n                  Selecione\n                </option>\n                <option value=\"+\">SOMAR</option>\n                <option value=\"-\">SUBTRAIR</option>\n                <option value=\"*\">MULTIPLICAR</option>\n                <option value=\"/\">DIVIDIR</option>\n              </select>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"\">Insira um número</label>\n            {resultNumber !== \"0\" && (\n              <input\n                id=\"input-calculator-preferences\"\n                type=\"number\"\n                name=\"num2\"\n                onChange={handleChange}\n                disabled\n                required\n              />\n            )}\n            {resultNumber === \"0\" && (\n              <input\n                id=\"input-calculator-preferences\"\n                type=\"text\"\n                name=\"num2\"\n                onChange={handleChange}\n                required\n              />\n            )}\n          </div>\n        </form>\n        <div className=\"submit-button\">\n          <Button\n            id=\"reset-button\"\n            className=\"button-input\"\n            number=\"RST\"\n            onClick={() => cleanDisplay()}\n          ></Button>\n          <div>\n            {!!values.num1 && !!values.num2 && !!values.operation ? (\n              <button\n                onClick={handleSubmit}\n                type=\"submit\"\n                className=\"button-submit\"\n              >\n                =\n              </button>\n            ) : (\n              <button type=\"submit\" className=\"button-submit disabled-button\">\n                =\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputCalculator;\n","import React from \"react\";\n\nexport default function Button(props) {\n  return (\n    <div id={props.id} className={props.className} style={props.style} role=\"button\" onClick={props.onClick}>\n      {props.number}\n    </div>\n  );\n}\n","import React from 'react'\nexport default function Header(props) {\n  return (\n    <>\n      <header className=\"header row\">\n        <div className=\"logo-header\">\n          <img alt='logo best online calculators' src=\"./pccalculators.png\"></img>\n        </div>\n        <div className=\"buttons-header\">\n          <div className=\"button-header\">\n            <a href=\"/\">Calculadoras romanas</a>\n          </div>\n          <div className=\"button-header\">\n              <a href=\"/bhaskara-calculators\">Fórmula de Bhaskara</a>\n          </div>\n        </div>\n      </header>\n    </>\n  );\n}\n","import React from 'react'\n\n\nexport default function Content(props) {\n    return (\n        <main>\n        \n        {props.children}\n       \n      </main>\n    )\n}","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons/\";\nexport default function Footer(props) {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-wrapper\">\n      <div className=\"footer-links\">\n          <div>\n            <span style={{marginLeft: '1rem'}}>Github</span>\n            <div id='footer-link'>\n              <a id='footer-icon' href=\"https://github.com/ordep2v\">\n                <FontAwesomeIcon icon={faGithub} size='5x'/>\n              </a>\n            </div>\n          </div>\n          <div>\n            Linkedin\n            <div id='footer-link'>\n              <a href=\"https://www.linkedin.com/in/pedro-cunha-73b3041b0/\">\n                <FontAwesomeIcon  icon={faLinkedin} size='5x'/>\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-text\">\n          <div>\n            Aplicação desenvolvida como resposta ao desafio da VilaApps.\n          </div>\n          <div>Pedro Cunha, 2021.</div>\n        </div>\n       \n      </div>\n    </footer>\n  );\n}\n","import React from 'react'\nexport default function Display(props) {\n    \n\n    return (\n        <div className='display-content'>\n            {props.children}\n        </div>\n    )\n}\n","import React, { useState } from \"react\";\nimport Display from \"./display\";\nimport Button from \"../../template/button\";\nimport MathFunctions from \"../../utils/math-functions\";\nimport \"../../app.css\";\n\nexport default function RomanCalculator(props) {\n  const errorText = \"*Insira valores válidos*\";\n  function convertToRoman() {\n    let arabic = displayNumber;\n    let roman = \"\";\n    const arabicArray = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    const romanArray = [\n      \"M\",\n      \"CM\",\n      \"D\",\n      \"CD\",\n      \"C\",\n      \"XC\",\n      \"L\",\n      \"XL\",\n      \"X\",\n      \"IX\",\n      \"V\",\n      \"IV\",\n      \"I\",\n    ];\n    if (arabic === \"0\") {\n      roman = \"NULO\";\n      return roman;\n    }\n    if (arabic !== 0) {\n      for (let i = 0; i < arabicArray.length; i++) {\n        while (arabicArray[i] <= arabic) {\n          roman += romanArray[i];\n          arabic -= arabicArray[i];\n        }\n      }\n      return roman;\n    }\n  }\n  const [\n    calculate,\n    numberConcat,\n    SUM,\n    DECREASE,\n    MULTIPLY,\n    SHARE,\n  ] = MathFunctions();\n  const [displayNumber, setDisplayNumber] = useState(\"0\");\n  const [displayOp, setDisplayOp] = useState(\"\");\n  const [n1, setN1] = useState(\"0\");\n  const [n2, setN2] = useState(null);\n  const [op, setOp] = useState(null);\n\n  function numberAdd(number) {\n    let result;\n    if (op === null) {\n      result = numberConcat(n1, number);\n      setN1(result);\n    } else {\n      result = numberConcat(n2, number);\n      setN2(result);\n    }\n    setDisplayNumber(result);\n  }\n\n  function opAdd(op) {\n    if (op !== null && displayNumber !== \"0\") {\n      setOp(op);\n      calculateAction();\n      setDisplayOp(op);\n      return;\n    }\n\n    if (n2 !== null) {\n      const result = calculate(parseInt(n1), parseInt(n2), op);\n      setOp(op);\n      setN1(result);\n      setN2(null);\n    }\n  }\n  function calculateAction() {\n    if (n2 === null) {\n      return;\n    }\n    const result = calculate(parseInt(n1), parseInt(n2), op);\n    if (result > 0 && Number.isInteger(result)) {\n      console.log(convertToRoman().length);\n      setN1(result);\n      setN2(null);\n      setDisplayNumber(parseInt(result));\n      setDisplayOp(\"\");\n    } else {\n      clean();\n      setDisplayNumber(errorText);\n      setDisplayOp(null);\n    }\n  }\n  function clean() {\n    setDisplayNumber(\"0\");\n    setDisplayOp(\"\");\n    setN1(\"0\");\n    setN2(null);\n    setOp(null);\n  }\n\n  return (\n    <div className=\"calculator\">\n      <div className=\"calculator-displays\">\n        <div className=\"display\">\n          {displayNumber === errorText && (\n            <Display>\n              <div className=\"roman-display\">*Algum problema aconteceu*</div>\n            </Display>\n          )}\n\n          {displayNumber !== errorText && (\n            <Display>\n              <div></div>\n              <div\n                className=\"roman-display\"\n                style={{ fontSize: \"2.5rem\", fontWeight: \"bold\" }}\n              >\n                {convertToRoman()}\n              </div>\n            </Display>\n          )}\n        </div>\n        <div className=\"display arabic-display\">\n          {displayNumber === errorText && (\n            <Display>\n              <div>{displayNumber}</div>\n            </Display>\n          )}\n          {displayNumber !== errorText && (\n            <Display>\n              <div style={{ fontSize: \"3rem\" }}>\n                <strong>{displayOp}</strong>\n              </div>\n              <div style={{ fontSize: \"2.5rem\", fontWeight: \"bold\" }}>\n                {displayNumber}\n              </div>\n            </Display>\n          )}\n        </div>\n      </div>\n      <div className=\"buttons\">\n        <Button\n          className=\"button\"\n          number={\"I\"}\n          onClick={() => numberAdd(\"1\")}\n          style={{ borderRadius: \"1rem 0 0 0\" }}\n        />\n        <Button\n          className=\"button\"\n          number={\"V\"}\n          onClick={() => numberAdd(\"5\")}\n        />\n        <Button\n          className=\"button\"\n          number={\"X\"}\n          onClick={() => numberAdd(\"10\")}\n        />\n        <Button\n          className=\"button\"\n          number={\"L\"}\n          onClick={() => numberAdd(\"50\")}\n          style={{ borderRadius: \"0 1rem 0 0\" }}\n        />\n        <Button\n          className=\"button\"\n          number={\"C\"}\n          onClick={() => numberAdd(\"100\")}\n        />\n        <Button\n          className=\"button\"\n          number={\"D\"}\n          onClick={() => numberAdd(\"500\")}\n        />\n        <Button\n          className=\"button\"\n          number={\"M\"}\n          onClick={() => numberAdd(\"1000\")}\n        />\n        <Button className=\"button\" number={\"+\"} onClick={() => opAdd(SUM)} />\n        <Button\n          className=\"button\"\n          number={\"-\"}\n          onClick={() => opAdd(DECREASE)}\n          style={{ borderRadius: \"0 0 0 1rem\" }}\n        />\n        <Button\n          className=\"button\"\n          number={\"*\"}\n          onClick={() => opAdd(MULTIPLY)}\n        />\n        <Button className=\"button\" number={\"/\"} onClick={() => opAdd(SHARE)} />\n        <Button\n          className=\"button\"\n          number={\"=\"}\n          onClick={() => calculateAction()}\n          style={{ borderRadius: \"0 0 1rem 0\" }}\n        />\n        <Button\n          id=\"reset-button\"\n          className=\"button\"\n          number={\"RST\"}\n          style={{\n            marginTop: \".5rem\",\n            width: \"6.5rem\",\n            height: \"6.5rem\",\n            borderRadius: \"5rem\",\n            background: \"#aa0000\",\n            borderColor: \"#312c3b\",\n          }}\n          onClick={() => clean()}\n        />\n        <Button className=\"button disabled\" />\n        <Button className=\"button disabled\" />\n        <div className=\"logo-bottom\">\n          <img\n            src=\"./logopccalculadoras.png\"\n            alt=\"logo pedro cunha calculadoras\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","export default function MathFunctions() {\n  const SUM = \"+\";\n  const DECREASE = \"-\";\n  const MULTIPLY = \"*\";\n  const SHARE = \"/\";\n\n  function calculate(n1, n2, op) {\n    let result;\n    switch (op) {\n      case SUM:\n        result = n1 + n2;\n        break;\n      case DECREASE:\n        result = n1 - n2;\n        break;\n      case MULTIPLY:\n        result = n1 * n2;\n        break;\n      case SHARE:\n        result = n1 / n2;\n        break;\n      default:\n        result = 0;\n    }\n    return result;\n  }\n  function numberConcat(currentNumber, numConcat) {\n    let result;\n    if (currentNumber) {\n       result = parseInt(currentNumber) + parseInt(numConcat);\n       return result\n    }\n    if (currentNumber === \"0\" || currentNumber === null) {\n      currentNumber = \"\";\n    }\n    return currentNumber + numConcat;\n  }\n\n\n  \n  return [calculate, numberConcat, SUM, DECREASE, MULTIPLY, SHARE];\n}\n","import React from 'react'\nimport Header from \"../template/header\";\nimport Content from \"../template/content\";\nimport Footer from \"../template/footer\";\n\nimport RomanCalculator from \"../components/roman-calculator/calculator\";\nimport InputCalculator from \"../components/input-calculator/input-calculator\";\n\nexport default function RomanCalculators(props) {\n  return (\n    <>\n      <div className=\"grid-container\">\n      <Header />\n      <Content>\n        <div className=\"calculator-wrapper\">\n          <div>\n            <h3>PC Roman Button Calculator</h3>\n            <RomanCalculator />{\" \"}\n          </div>\n          <div>\n            <h3>PC Mixed Input Calc</h3>\n            <InputCalculator />\n          </div>\n        </div>\n      </Content>\n      <Footer />\n        </div>\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from \"../../template/button\";\n\nexport default function Bhaskara() {\n  const errorText = \"*Erro* Delta negativo.\";\n  const [x1, setX1] = useState(\"\");\n  const [x2, setX2] = useState(\"\");\n  const [delta, setDelta] = useState(\"\");\n  const [displayEq, setDisplayEq] = useState(\"\");\n  const [valuesEq, setValuesEq] = useState({\n    valueA: \"\",\n    valueB: \"\",\n    valueC: \"\",\n  });\n\n  function deltaFind() {\n    let result = valuesEq.valueB ** 2 - 4 * (valuesEq.valueA * valuesEq.valueC);\n    setDelta(result);\n  }\n\n  function findTwoX() {\n    let x1 = 0;\n    let x2 = 0;\n\n    x1 = (-valuesEq.valueB + Math.sqrt(delta)) / (2 * valuesEq.valueA);\n    x2 = (-valuesEq.valueB - Math.sqrt(delta)) / (2 * valuesEq.valueA);\n    setX1(x1);\n    setX2(x2);\n  }\n  const handleChange = (e) => {\n    setValuesEq({ ...valuesEq, [e.target.name]: e.target.value });\n  };\n  function displayClean() {\n    setDisplayEq(\"\");\n    setValuesEq({ valueB: 0 });\n    setX1(null);\n    setX2(null);\n    setDelta(null);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    deltaFind();\n    findTwoX();\n    delta === null || (delta === \"\" && setDisplayEq(errorText));\n  }\n  return (\n    <>\n      <div className=\"bhaskara-calculator\">\n        <div className=\"bhaskara-display\">\n          {!valuesEq.valueA && (\n            <>\n              <div>Complete a equação de 2º grau: </div>\n              <div>(a)x²+(b)x+(c) = 0</div>\n            </>\n          )}\n          {!delta && valuesEq.valueA && (\n            <>\n              <div>Complete a equação: </div>\n              <div>\n                ({valuesEq.valueA})x²+({valuesEq.valueB})x+(\n                {valuesEq.valueC}) = 0\n              </div>\n            </>\n          )}\n          {delta < 0 && (\n            <>\n              <div>{displayEq}</div>\n              <div></div>\n            </>\n          )}\n          {delta > 0 && (\n            <>\n              <div>\n                &#916;= -{valuesEq.valueB}²-4*{valuesEq.valueA}*\n                {valuesEq.valueC} = {delta}\n              </div>\n              <div>\n                <div>\n                  X'=-{valuesEq.valueB}+&#8730;{delta}&#247;2({valuesEq.valueA})\n                  = {x1}\n                </div>{\" \"}\n                <div>\n                  X\"=-{valuesEq.valueB}-&#8730;{delta}&#247;2(\n                  {valuesEq.valueA}) = {x2}\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n        <div className=\"bhaskara-form\">\n          {!delta && (\n            <form onSubmit={handleSubmit} aria-label=\"formulario\">\n              <div>\n                <label htmlFor=\"valueA\">Insira o valor de (a)</label>\n                <input\n                  id=\"bhaskara-input\"\n                  type=\"number\"\n                  name=\"valueA\"\n                  onChange={handleChange}\n                  required\n                ></input>\n              </div>\n              <div>\n                <label htmlFor=\"valueA\">Insira o valor de (b)</label>\n                <input\n                  id=\"bhaskara-input\"\n                  type=\"number\"\n                  name=\"valueB\"\n                  onChange={handleChange}\n                  required\n                ></input>\n              </div>\n              <div>\n                <label htmlFor=\"valueA\">Insira o valor de (c)</label>\n                <input\n                  style={{ marginLeft: \"2.3rem\" }}\n                  id=\"bhaskara-input\"\n                  type=\"number\"\n                  name=\"valueC\"\n                  onChange={handleChange}\n                  required\n                ></input>\n              </div>\n            </form>\n          )}\n          <div className=\"bhaskara-buttons\">\n            <Button\n              id=\"reset-button\"\n              number=\"RST\"\n              onClick={() => displayClean()}\n              className=\"button-input\"\n            ></Button>\n            {!!delta && (\n              <Button\n                className=\"button-submit disabled-button\"\n                id=\"bhaskara-submit\"\n                number=\"=\"\n              ></Button>\n            )}\n            {!delta && (\n              <Button\n                className=\"button-submit\"\n                id=\"bhaskara-submit\"\n                number=\"=\"\n                onClick={handleSubmit}\n              >\n                =\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Header from \"../template/header\";\nimport Content from \"../template/content\";\nimport Footer from \"../template/footer\";\n\nimport Bhaskara from \"../components/bhaskara/bhaskara\";\n\nexport default function BhaskaraCalculators(props) {\n  return (\n    <>\n      <div className=\"grid-container\">\n      <Header />\n        <Content>\n          <div className=\"calculator-wrapper\">\n            <div>\n              <h3>PC Bhaskara Magic Board</h3>\n              <Bhaskara />\n            </div>\n          </div>\n        </Content>\n      <Footer />\n      </div>\n    </>\n  );\n}\n","import \"./app.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport RomanCalculators from \"./pages/roman-calculators\";\nimport BhaskaraCalculators from \"./pages/bhaskara-calculators\";\nfunction App() {\n  return (\n    <BrowserRouter>\n      \n        <Route path=\"/\" exact component={RomanCalculators}></Route>\n\n        <Route path=\"/bhaskara-calculators\" exact component={BhaskaraCalculators}></Route>\n\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}