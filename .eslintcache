[{"/home/v1vxz/desafio-calculadora/src/index.js":"1","/home/v1vxz/desafio-calculadora/src/reportWebVitals.js":"2","/home/v1vxz/desafio-calculadora/src/app.js":"3","/home/v1vxz/desafio-calculadora/src/components/roman-calculator/calculator.jsx":"4","/home/v1vxz/desafio-calculadora/src/components/roman-calculator/display.jsx":"5","/home/v1vxz/desafio-calculadora/src/utils/math-functions.js":"6","/home/v1vxz/desafio-calculadora/src/template/header.jsx":"7","/home/v1vxz/desafio-calculadora/src/template/content.jsx":"8","/home/v1vxz/desafio-calculadora/src/template/footer.jsx":"9","/home/v1vxz/desafio-calculadora/src/components/bhaskara/bhaskara.jsx":"10","/home/v1vxz/desafio-calculadora/src/template/button.jsx":"11","/home/v1vxz/desafio-calculadora/src/components/input-calculator/input-calculator.jsx":"12","/home/v1vxz/desafio-calculadora/src/pages/roman-calculators.jsx":"13","/home/v1vxz/desafio-calculadora/src/pages/bhaskara-calculators.jsx":"14"},{"size":500,"mtime":1611710270870,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1611704660099,"results":"17","hashOfConfig":"16"},{"size":464,"mtime":1612124925108,"results":"18","hashOfConfig":"16"},{"size":5884,"mtime":1612124362910,"results":"19","hashOfConfig":"16"},{"size":180,"mtime":1612053675193,"results":"20","hashOfConfig":"16"},{"size":895,"mtime":1611855503465,"results":"21","hashOfConfig":"16"},{"size":583,"mtime":1612125704525,"results":"22","hashOfConfig":"16"},{"size":160,"mtime":1611799619741,"results":"23","hashOfConfig":"16"},{"size":1150,"mtime":1612125244840,"results":"24","hashOfConfig":"16"},{"size":4454,"mtime":1612124437265,"results":"25","hashOfConfig":"16"},{"size":228,"mtime":1612113564569,"results":"26","hashOfConfig":"16"},{"size":12474,"mtime":1612124403329,"results":"27","hashOfConfig":"16"},{"size":793,"mtime":1612120674493,"results":"28","hashOfConfig":"16"},{"size":594,"mtime":1612120496798,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"nrh3so",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/v1vxz/desafio-calculadora/src/index.js",[],["60","61"],"/home/v1vxz/desafio-calculadora/src/reportWebVitals.js",[],"/home/v1vxz/desafio-calculadora/src/app.js",[],"/home/v1vxz/desafio-calculadora/src/components/roman-calculator/calculator.jsx",[],"/home/v1vxz/desafio-calculadora/src/components/roman-calculator/display.jsx",[],"/home/v1vxz/desafio-calculadora/src/utils/math-functions.js",[],"/home/v1vxz/desafio-calculadora/src/template/header.jsx",[],"/home/v1vxz/desafio-calculadora/src/template/content.jsx",[],"/home/v1vxz/desafio-calculadora/src/template/footer.jsx",[],"/home/v1vxz/desafio-calculadora/src/components/bhaskara/bhaskara.jsx",[],"/home/v1vxz/desafio-calculadora/src/template/button.jsx",[],"/home/v1vxz/desafio-calculadora/src/components/input-calculator/input-calculator.jsx",["62","63","64","65","66","67"],"import React, { useState } from \"react\";\nimport Button from \"../../template/button\";\nimport \"../../app.css\";\n\nconst InputCalculator = () => {\n  const errorText = \"*Insira valores v√°lidos*\";\n  const [resultNumber, setResultNumber] = useState(\"0\");\n  const [values, setValues] = useState({\n    num1: \"\",\n    num2: \"\",\n    operation: \"\",\n  });\n\n  function convertToRoman(anyNumber) {\n    let arabic = anyNumber;\n    let roman = \"\";\n    const arabicArray = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n    const romanArray = [\n      \"M\",\n      \"CM\",\n      \"D\",\n      \"CD\",\n      \"C\",\n      \"XC\",\n      \"L\",\n      \"XL\",\n      \"X\",\n      \"IX\",\n      \"V\",\n      \"IV\",\n      \"I\",\n    ];\n    if (arabic === \"0\") {\n      roman = \"NULO\";\n      return roman;\n    }\n    if (arabic !== 0) {\n      for (let i = 0; i < arabicArray.length; i++) {\n        while (arabicArray[i] <= arabic) {\n          roman += romanArray[i];\n          arabic -= arabicArray[i];\n        }\n      }\n      return roman;\n    }\n  }\n  function convertToArabic(anyNumber) {\n    var numbers = anyNumber;\n\n    if (anyNumber) {\n      switch (anyNumber) {\n        case \"m\":\n        case \"M\":\n          return 1000;\n        case \"cm\":\n        case \"CM\":\n          return 900;\n        case \"d\":\n        case \"D\":\n          return 500;\n        case \"cd\":\n        case \"CD\":\n          return 400;\n        case \"c\":\n        case \"C\":\n          return 100;\n        case \"xc\":\n        case \"XC\":\n          return 90;\n        case \"l\":\n        case \"L\":\n          return 50;\n        case \"xl\":\n        case \"XL\":\n          return 40;\n        case \"x\":\n        case \"X\":\n          return 10;\n        case \"ix\":\n        case \"IX\":\n          return 9;\n        case \"v\":\n        case \"V\":\n          return 5;\n        case \"iv\":\n        case \"IV\":\n          return 4;\n        case \"i\":\n        case \"I\":\n          return 1;\n        default:\n          return \"\";\n      }\n    }\n    return numbers;\n  }\n\n  function toSum(numbers) {\n    let sum = 0;\n    for (let i = 0; i < numbers.length; i++) {\n      sum = sum + convertToArabic(numbers[i]);\n    }\n    return sum;\n  }\n\n  function calculateAction() {\n    let result = \"\";\n\n    if (!isNaN(values.num1) && !isNaN(values.num2)) {\n      result = eval(`${values.num1} ${values.operation} ${values.num2}`);\n    } else {\n      result = eval(\n        `${toSum(\n          values.num1\n            .replace(9, \"\")\n            .replace(8, \"\")\n            .replace(7, \"\")\n            .replace(6, \"\")\n            .replace(5, \"\")\n            .replace(4, \"\")\n            .replace(3, \"\")\n            .replace(2, \"\")\n            .replace(1, \"\")\n            .replace(0, \"\")\n        )} ${values.operation.toString()} ${toSum(\n          values.num2\n            .replace(9, \"\")\n            .replace(8, \"\")\n            .replace(7, \"\")\n            .replace(6, \"\")\n            .replace(5, \"\")\n            .replace(4, \"\")\n            .replace(3, \"\")\n            .replace(2, \"\")\n            .replace(1, \"\")\n            .replace(0, \"\")\n        )}`\n      );\n    }\n\n    if (result >= 0) {\n      setResultNumber(\n        `${values.num1}\n        `\n      );\n    } else {\n      setResultNumber(errorText);\n    }\n  }\n\n  function cleanDisplay() {\n    setResultNumber(\"0\");\n  }\n\n  const handleChange = (e) => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!!isNaN(values.num1) && !!isNaN(values.num2)) {\n      calculateAction();\n    } else if (!isNaN(values.num1) && !isNaN(values.num2)) {\n      calculateAction();\n    } else if (!isNaN(values.num1) && !!isNaN(values.num2)) {\n      setResultNumber(errorText);\n    } else if (!!isNaN(values.num1) && !isNaN(values.num2)) {\n      setResultNumber(errorText);\n    } else {\n      setResultNumber(errorText);\n    }\n  };\n\n\n\n  return (\n    <div className=\"input-calculator\" aria-label=\"calculadora por input\">\n      <div className=\"input-display\">\n        <div className=\"input-result\">\n          {!resultNumber ||\n            (resultNumber === \"0\" && (\n              <>\n                <div>NULO</div>\n                <div>{resultNumber}</div>\n              </>\n            ))}\n          {resultNumber === errorText && (\n            <>\n              <div>{resultNumber}</div>\n              <div></div>\n            </>\n          )}\n          {resultNumber.length > 1 &&\n            resultNumber !== errorText &&\n            !!isNaN(values.num1) &&\n            !!isNaN(values.num2) && (\n              <>\n                <div className=\"input-content input\">\n                  <div>\n                    {values.num1\n                      .toUpperCase()\n                      .replace(9, \"\")\n                      .replace(8, \"\")\n                      .replace(7, \"\")\n                      .replace(6, \"\")\n                      .replace(5, \"\")\n                      .replace(4, \"\")\n                      .replace(3, \"\")\n                      .replace(2, \"\")\n                      .replace(1, \"\")\n                      .replace(0, \"\")}\n                    {values.operation}\n                    {values.num2\n                      .toUpperCase()\n                      .replace(9, \"\")\n                      .replace(8, \"\")\n                      .replace(7, \"\")\n                      .replace(6, \"\")\n                      .replace(5, \"\")\n                      .replace(4, \"\")\n                      .replace(3, \"\")\n                      .replace(2, \"\")\n                      .replace(1, \"\")\n                      .replace(0, \"\")}{\" \"}\n                    ={\" \"}\n                    {convertToRoman(\n                      eval(\n                        `${toSum(\n                          values.num1\n                            .toUpperCase()\n                            .replace(9, \"\")\n                            .replace(8, \"\")\n                            .replace(7, \"\")\n                            .replace(6, \"\")\n                            .replace(5, \"\")\n                            .replace(4, \"\")\n                            .replace(3, \"\")\n                            .replace(2, \"\")\n                            .replace(1, \"\")\n                            .replace(0, \"\")\n                        )} ${values.operation.toString()} ${toSum(\n                          values.num2\n                            .replace(9, \"\")\n                            .replace(8, \"\")\n                            .replace(7, \"\")\n                            .replace(6, \"\")\n                            .replace(5, \"\")\n                            .replace(4, \"\")\n                            .replace(3, \"\")\n                            .replace(2, \"\")\n                            .replace(1, \"\")\n                            .replace(0, \"\")\n                        )}`\n                      )\n                    )}\n                  </div>\n                  <div></div>\n                  <div className=\"input-content\">\n                    {eval(\n                      `${toSum(\n                        values.num1\n                          .replace(9, \"\")\n                          .replace(8, \"\")\n                          .replace(7, \"\")\n                          .replace(6, \"\")\n                          .replace(5, \"\")\n                          .replace(4, \"\")\n                          .replace(3, \"\")\n                          .replace(2, \"\")\n                          .replace(1, \"\")\n                          .replace(0, \"\")\n                      )} ${values.operation.toString()} ${toSum(\n                        values.num2\n                          .replace(9, \"\")\n                          .replace(8, \"\")\n                          .replace(7, \"\")\n                          .replace(6, \"\")\n                          .replace(5, \"\")\n                          .replace(4, \"\")\n                          .replace(3, \"\")\n                          .replace(2, \"\")\n                          .replace(1, \"\")\n                          .replace(0, \"\")\n                      )}`\n                    )}\n                  </div>\n                </div>\n              </>\n            )}\n          {resultNumber.length > 1 &&\n            resultNumber !== \"*Insira valores v√°lidos*\" &&\n            !isNaN(values.num1) &&\n            !isNaN(values.num2) && (\n              <>\n                <div className=\"input-content\">\n                  <div>\n                    {values.num1}\n                    {values.operation}\n                    {values.num2} ={\" \"}\n                    {eval(`${values.num1} ${values.operation} ${values.num2}`)}\n                  </div>\n                  <div className=\"input-content\">\n                    {convertToRoman(\n                      eval(\n                        `${values.num1} ${values.operation.toString()} ${\n                          values.num2\n                        }`\n                      )\n                    )}\n                  </div>\n                </div>\n              </>\n            )}\n        </div>\n        <div className=\"logo-input\">\n          <img src=\"./inputcalculator.png\" alt=\"logo calculadora input\"></img>\n        </div>\n      </div>\n      <div className=\"form\">\n        <form\n          onSubmit={handleSubmit}\n          id=\"form-calculator\"\n          aria-label=\"formulario\"\n        >\n          <div>\n            <label htmlFor=\"num1\">Insira um n√∫mero</label>\n            {resultNumber !== \"0\" && (\n              <input\n                id=\"input-calculator-preferences\"\n                type=\"number\"\n                name=\"num1\"\n                onChange={handleChange}\n                disabled\n                required\n              />\n            )}\n\n            {resultNumber === \"0\" && (\n              <input\n                id=\"input-calculator-preferences\"\n                type=\"text\"\n                name=\"num1\"\n                onChange={handleChange}\n                required\n              />\n            )}\n          </div>\n          <div>\n            <label htmlFor=\"\">Insira a opera√ß√£o</label>\n            {resultNumber !== \"0\" && (\n              <select\n                name=\"operation\"\n                required\n                onChange={(e) => handleChange(e)}\n                disabled\n              >\n                <option defaultValue value=\"\">\n                  Selecione\n                </option>\n                <option value=\"+\">SOMAR</option>\n                <option value=\"-\">SUBTRAIR</option>\n                <option value=\"*\">MULTIPLICAR</option>\n                <option value=\"/\">DIVIDIR</option>\n              </select>\n            )}\n\n            {resultNumber === \"0\" && (\n              <select\n                name=\"operation\"\n                required\n                onChange={(e) => handleChange(e)}\n              >\n                <option defaultValue value=\"\">\n                  Selecione\n                </option>\n                <option value=\"+\">SOMAR</option>\n                <option value=\"-\">SUBTRAIR</option>\n                <option value=\"*\">MULTIPLICAR</option>\n                <option value=\"/\">DIVIDIR</option>\n              </select>\n            )}\n          </div>\n\n          <div>\n            <label htmlFor=\"\">Insira um n√∫mero</label>\n            {resultNumber !== \"0\" && (\n              <input\n                id=\"input-calculator-preferences\"\n                type=\"number\"\n                name=\"num2\"\n                onChange={handleChange}\n                disabled\n                required\n              />\n            )}\n            {resultNumber === \"0\" && (\n              <input\n                id=\"input-calculator-preferences\"\n                type=\"text\"\n                name=\"num2\"\n                onChange={handleChange}\n                required\n              />\n            )}\n          </div>\n        </form>\n        <div className=\"submit-button\">\n          <Button\n            id=\"reset-button\"\n            className=\"button-input\"\n            number=\"RST\"\n            onClick={() => cleanDisplay()}\n          ></Button>\n          <div>\n            {!!values.num1 && !!values.num2 && !!values.operation ? (\n              <button\n                onClick={handleSubmit}\n                type=\"submit\"\n                className=\"button-submit\"\n              >\n                =\n              </button>\n            ) : (\n              <button type=\"submit\" className=\"button-submit disabled-button\">\n                =\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InputCalculator;\n","/home/v1vxz/desafio-calculadora/src/pages/roman-calculators.jsx",[],"/home/v1vxz/desafio-calculadora/src/pages/bhaskara-calculators.jsx",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":110,"column":16,"nodeType":"74","messageId":"75","endLine":110,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":112,"column":16,"nodeType":"74","messageId":"75","endLine":112,"endColumn":20},{"ruleId":"72","severity":1,"message":"73","line":229,"column":23,"nodeType":"74","messageId":"75","endLine":229,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":261,"column":22,"nodeType":"74","messageId":"75","endLine":261,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":302,"column":22,"nodeType":"74","messageId":"75","endLine":302,"endColumn":26},{"ruleId":"72","severity":1,"message":"73","line":306,"column":23,"nodeType":"74","messageId":"75","endLine":306,"endColumn":27},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-eval","eval can be harmful.","CallExpression","unexpected","no-global-assign","no-unsafe-negation"]